{"version":3,"sources":["firebase.js","Message.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Message","forwardRef","ref","message","isUser","username","className","Card","CardContent","Typography","color","variant","component","App","useState","input","setInput","messages","setMessages","setUsername","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","prompt","src","FormControl","InputLabel","Input","value","onChange","event","target","IconButton","disabled","type","onClick","add","timestamp","FieldValue","serverTimestamp","preventDefault","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAeeA,EAbKC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,4CACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGIC,Y,yDCeRC,G,MAvBCC,sBAAW,WAAsBC,GAAS,IAA7BC,EAA4B,EAA5BA,QACnBC,EAD+C,EAAnBC,WACNF,EAAQE,SAEpC,OACI,yBAAKH,IAAKA,EAAKI,UAAS,kBAAaF,GAAU,kBAC3C,kBAACG,EAAA,EAAD,CAAMD,UAAWF,EAAS,oBAAsB,sBAC5C,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,MAAM,UACNC,QAAQ,KACRC,UAAU,OAGRR,GAAD,UAAcD,EAAQE,UAAY,UAAlC,MANL,IAMuDF,EAAQA,gB,MCqDpEU,MA5Df,WAAgB,IAAD,EAEcC,mBAAS,IAFvB,mBAENC,EAFM,KAECC,EAFD,OAGoBF,mBAAS,IAH7B,mBAGNG,EAHM,KAGIC,EAHJ,OAIoBJ,mBAAS,IAJ7B,mBAINT,EAJM,KAIIc,EAJJ,KA8Bb,OAxBAC,qBAAU,WACRhC,EAAGiC,WAAW,YACbC,QAAQ,YAAa,QACrBC,YAAW,SAAAC,GACVN,EAAYM,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAK,CAACC,GAAID,EAAIC,GAAIzB,QAASwB,EAAIE,iBAEjE,IAEHT,qBAAU,WACRD,EAAYW,OAAO,6BAClB,IAeD,yBAAKxB,UAAU,OACb,gDACA,yBAAKyB,IAAI,+FACT,uCAAa1B,EAAb,KAEA,0BAAMC,UAAU,aACd,kBAAC0B,EAAA,EAAD,CAAa1B,UAAU,oBACrB,kBAAC2B,EAAA,EAAD,2BACA,kBAACC,EAAA,EAAD,CAAO5B,UAAU,aAAa6B,MAAOpB,EAAOqB,SAAU,SAAAC,GAAK,OAAIrB,EAASqB,EAAMC,OAAOH,UACrF,kBAACI,EAAA,EAAD,CAAYjC,UAAU,kBAAkBkC,UAAWzB,EAAOJ,QAAQ,YAAYD,MAAM,UAAU+B,KAAK,SAASC,QAtBhG,SAACL,GAEnBjD,EAAGiC,WAAW,YAAYsB,IAAI,CAC5BxC,QAAQY,EACRV,SAASA,EACTuC,UAAWvD,IAASU,UAAU8C,WAAWC,oBAE3C9B,EAAS,IACTqB,EAAMU,mBAeE,kBAAC,IAAD,SAOR,kBAAC,IAAD,KAEI9B,EAASS,KAAI,gBAAEE,EAAF,EAAEA,GAAIzB,EAAN,EAAMA,QAAN,OACX,kBAAC,EAAD,CAAS6C,IAAKpB,EAAIvB,SAAUA,EAAUF,QAASA,UCxDzD8C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.146ac7bc.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyAq2FOhD_XgMISf2DNZXe13gegbDpdRjSI\",\n    authDomain: \"cp-messenger-clone.firebaseapp.com\",\n    databaseURL: \"https://cp-messenger-clone.firebaseio.com\",\n    projectId: \"cp-messenger-clone\",\n    storageBucket: \"cp-messenger-clone.appspot.com\",\n    messagingSenderId: \"832553657525\",\n    appId: \"1:832553657525:web:4a725627cc891b26e2cafc\",\n    measurementId: \"G-7X7R944CKS\"\n});\n\nconst db = firebaseApp.firestore();\n\nexport default db;","import React, { forwardRef } from 'react'\nimport { Card, CardContent, Typography } from '@material-ui/core';\n\nimport './Message.css'\n\nconst Message = forwardRef(({message, username}, ref) => {\n    const isUser = username === message.username;\n\n    return (\n        <div ref={ref} className={`message ${isUser && 'message__user'}`}>\n            <Card className={isUser ? \"message__userCard\" : \"message__guestCard\"}>\n                <CardContent>\n                    <Typography\n                        color=\"inherit\"\n                        variant=\"h5\"\n                        component=\"h3\"\n\n                        >\n                        {!isUser && `${message.username || 'Unknown'}: `} {message.message}\n                    </Typography>\n                </CardContent>\n            </Card>\n        </div>\n        \n        \n    )\n})\n\nexport default Message\n","import React, { useState, useEffect } from 'react'; \nimport { Button, FormControl, InputLabel, Input } from '@material-ui/core';\nimport db from './firebase';\nimport firebase from 'firebase';\nimport FlipMove from 'react-flip-move';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\nimport Message from './Message';\n\nimport './App.css';\n\nfunction App() {\n\n  const [input, setInput ] = useState('');\n  const [messages, setMessages ] = useState([])\n  const [username, setUsername ] = useState('');\n\n  useEffect(() => {\n    db.collection('messages')\n    .orderBy('timestamp', 'desc')\n    .onSnapshot(snapshot => {\n      setMessages(snapshot.docs.map(doc => ({id: doc.id, message: doc.data()})))\n    })\n  }, []);\n\n  useEffect(() => {\n    setUsername(prompt('Please enter your name'))\n  }, []);\n\n  const sendMessage = (event) => {\n\n    db.collection('messages').add({\n      message:input,\n      username:username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp() \n    })\n    setInput('');\n    event.preventDefault();\n\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Messenger Clone </h1>\n      <img src=\"https://facebookbrand.com/wp-content/uploads/2018/09/Header-e1538151782912.png?w=100&h=100\" />\n      <h3>Welcome {username} </h3>\n\n      <form className=\"app__form\">\n        <FormControl className=\"app__formControl\">\n          <InputLabel>Enter a message...</InputLabel>\n          <Input className=\"app__input\" value={input} onChange={event => setInput(event.target.value)}/>\n          <IconButton className=\"app__iconButton\" disabled={!input} variant=\"contained\" color=\"primary\" type=\"submit\" onClick={sendMessage}>\n            <SendIcon />\n          </IconButton>\n        </FormControl>\n        \n      </form>\n      \n      \n    <FlipMove>\n      {\n        messages.map(({id, message}) => (\n          <Message key={id} username={username} message={message}/>\n        ))\n      }\n    </FlipMove>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}